package com.morningstar.eapi.commons;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.morningstar.eapi.utils.PathUtil;

public class ExcelUtil {

	/**
	 * Get excel cell data into a list which contains string array as element
	 * 
	 * @param excel
	 *            the excel file to be read
	 * @param sheetName
	 *            name of the sheet to be read
	 * @return
	 */
	public static List<List<String>> getCellData(String excel, String sheetName) throws Exception {

		ExcelAnalysisXLSX ana = new ExcelAnalysisXLSX();
		ana.setPath(PathUtil.getAbsolutePath(excel));
		ana.setSheetName(sheetName);
		ana.process();
		List<List<String>> datas = ana.getDatas();
		return datas;
	}

	public static List<List<String>> getCellData(String excel, String sheetName, boolean ignoreHeader) throws Exception {

		ExcelAnalysisXLSX ana = new ExcelAnalysisXLSX();
		ana.setPath(PathUtil.getAbsolutePath(excel));
		ana.setSheetName(sheetName);
		ana.process();
		List<List<String>> datas = ana.getDatas();
		if (!ignoreHeader)
			return datas;
		else {
			datas.remove(0);
			return datas;
		}
	}

	/**
	 * To get columns'data from excel
	 * 
	 * @param excel
	 * @param sheetName
	 * @param columns
	 * @param ignoreHeader
	 * @return
	 * @throws Exception
	 */
	public static List<List<String>> getColumnData(String excel, String sheetName, int[] columns, boolean ignoreHeader) throws Exception {

		if (columns == null || columns.length == 0)
			return null;

		Map<Integer, List<String>> maps = new HashMap<Integer, List<String>>();
		for (int i = 0; i < columns.length; i++) {
			maps.put(columns[i], new ArrayList<String>());
		}

		List<List<String>> rowDatas = getCellData(excel, sheetName);

		for (int i = 0; i < rowDatas.size(); i++) {

			if (i == 0 && ignoreHeader)
				continue;

			List<String> row = rowDatas.get(i);
			for (int j = 0; j < columns.length; j++) {
				if (columns[j] > row.size() - 1)
					continue;
				maps.get(columns[j]).add(row.get(columns[j]));
			}

		}

		List<List<String>> result = new ArrayList<List<String>>();
		result.addAll(maps.values());

		return result;
	}

}
