package com.morningstar.eapi.utils;

import java.io.File;
import java.net.URL;
import java.text.MessageFormat;

/**
 * @author Saber Pan
 * 
 */
public class PathUtil {

	/***
	 * get the absolute path through relative path
	 * 
	 * @param path
	 * @return
	 */
	public static String getAbsolutePath(String relativePath) {
		return combinePath(getRootPath(), relativePath);
	}

	/**
	 * Combine two paths at different platform
	 * 
	 * @param path
	 * @param subPath
	 * @return
	 */
	public static String combinePath(String path, String subPath) {
		if (path == null || path.trim().length() == 0) {
			subPath = subPath.trim().replace('/', File.separatorChar);
			subPath = subPath.replace('\\', File.separatorChar);
			return subPath;
		}
		if (subPath == null || subPath.trim().length() == 0) {
			path = path.trim().replace('/', File.separatorChar);
			path = path.replace('\\', File.separatorChar);
			return path;
		}

		path = path.trim().replace('/', File.separatorChar);
		path = path.replace('\\', File.separatorChar);
		subPath = subPath.trim().replace('/', File.separatorChar);
		subPath = subPath.replace('\\', File.separatorChar);

		if (path.endsWith(File.separator))
			path = path.substring(0, path.length() - 1);

		if (subPath.startsWith(File.separator))
			subPath = subPath.substring(1);

		return MessageFormat.format("{0}{1}{2}", path, File.separator, subPath);
	}

	/**
	 * get the class root path
	 * 
	 * @return
	 */
	public static String getClassPath() {
		URL url = Thread.currentThread().getContextClassLoader().getResource("");
		return url == null ? new File("").getAbsolutePath() : url.getPath();
	}

	/**
	 * get the project root path
	 * 
	 * @return
	 */
	public static String getRootPath() {
		String classPath = getClassPath();
		File f = new File(classPath);
		if (f.getAbsolutePath().endsWith("classes")) {
			if (f.getParentFile().getAbsolutePath().endsWith("target")) {
				return f.getParentFile().getParentFile().getAbsolutePath();
			} else {
				return f.getParentFile().getAbsolutePath();
			}
		}

		if (f.getAbsolutePath().endsWith("lib") || f.getAbsolutePath().endsWith("bin")) {
			return f.getParentFile().getAbsolutePath();
		} else
			return f.getAbsolutePath();
	}

}
